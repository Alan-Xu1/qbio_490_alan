# Set Working Directory
setwd("/Users/alanx/OneDrive/Desktop/QBIO490/qbio_490_alan/midterm_project_Xu")
dir.create("outputs")
setwd("outputs")
# Library Loading
if (!require("BiocManager", quietly = TRUE)){
install.packages("BiocManager")
}
library(BiocManager)
if (!require("TCGAbiolinks", quietly = TRUE)){
BiocManager::install("TCGAbiolinks")
}
library(TCGAbiolinks)
if (!require("maftools", quietly = TRUE)){
BiocManager::install("maftools")
}
library(maftools)
if (!require("maftools", quietly = TRUE)){
BiocManager::install("DESeq2")
}
library(DESeq2)
clin_query <- GDCquery(project = "TCGA-BRCA",
data.category = "Clinical",
file.type = "xml")
clinic <- GDCprepare_clinic(clin_query,
clinical.info = "patient",
directory = "/Users/alanx/OneDrive/Documents/GDCdata")
colnames(clinic)[ colnames(clinic) == "bcr_patient_barcode" ] <-
"Tumor_Sample_Barcode"
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open",
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
maf <- GDCprepare(maf_query, directory = "/Users/alanx/OneDrive/Documents/GDCdata")
maf_object <- read.maf(maf = maf,
clinicalData = clinic,
isTCGA = TRUE)
rna_query <- GDCquery(project ="TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
rna_se <- GDCprepare(rna_query, directory = "/Users/alanx/OneDrive/Documents/GDCdata")
gc()
save.image("C:/Users/alanx/OneDrive/Desktop/QBIO490/qbio_490_alan/midterm_project_Xu/outputs/data_loaded.RData")
# Get all patients that have diagnosis age info
clinic_age_no_na <- subset(clinic, is.na(clinic$age_at_initial_pathologic_diagnosis) == FALSE)
View(clinic_age_no_na)
sum(is.na(clinic$age_at_initial_pathologic_diagnosis))
# Making a survival time column for clinical info
clinic$survival_time <- ifelse(is.na(clinic_no_na$days_to_death),
clinic_no_na$survival_time <- clinic_no_na$days_to_last_followup,
clinic_no_na$survival_time <- clinic_no_na$days_to_death)
# Making a survival time column for clinical info
clinic$survival_time <- ifelse(is.na(clinic$days_to_death),
clinic$survival_time <- clinic$days_to_last_followup,
clinic$survival_time <- clinic$days_to_death)
# Remove all -Inf from the survival column
clinic_surv <- subset(clinic, clinic$survival_time != -Inf)
# Adding Mortality Information to clinic
clinic_surv <- ifelse(clinic_surv$vital_status == "Alive",
clinic_surv$death_event <- FALSE,
clinic_surv$death_event <- TRUE)
colnames(clinic_surv)
clinic_surv
### Clinical Information Processing
# Making a survival time column for clinical info
clinic$survival_time <- ifelse(is.na(clinic$days_to_death),
clinic$survival_time <- clinic$days_to_last_followup,
clinic$survival_time <- clinic$days_to_death)
# Remove all -Inf from the survival column
clinic_surv <- subset(clinic, clinic$survival_time != -Inf)
### MAF Object Processing + Clinical Information Processing
maf_object@clinical.data$survival_time <- ifelse(is.na(maf_object@clinical.data$days_to_death),
maf_object@clinical.data$survival_time <- maf_object@clinical.data$days_to_last_followup,
maf_object@clinical.data$survival_time <- maf_object@clinical.data$days_to_death)
### MAF Object Processing + Clinical Information Processing
# Making a survival time column for clinical info
maf_object@clinical.data$Overall_Survival_Status <-
ifelse(maf_object@clinical.data$vital_status == "Alive",
maf_object@clinical.data$Overall_Survival_Status <- TRUE,
maf_object@clinical.data$Overall_Survival_Status <- FALSE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "RAD51", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "brca1", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "BRCA1", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "FGFR2", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "BRIP1", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "SMYD4", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "RAD51C", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "RAD51D", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "RAD51", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "RAD50", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "SOX2", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "KLK7", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "PADI2", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Getting the top 20 most mutated genes through all patient population
oncoplot(maf = maf_object, top = 20)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "GATA3", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Getting the top 25 most mutated genes through all patient population
oncoplot(maf = maf_object, top = 25)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "KMT2C", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "CDH1", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
# Making a KM Plot for RAD51
mafSurvival(maf = maf_object,
genes = "TTN", ## pick a gene of your choosing
time = "days_to_last_followup", ## name of the column in maf_object@clinical.data containing survival time
Status = "Overall_Survival_Status", ## name of the column that contains a boolean value for death events, you may need to recreate this...
isTCGA = TRUE)
clinic$her2_immunohistochemistry_level_result
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != "")
# making a survival time column
clinic_her2$survival_time <- ifelse(is.na(clinic_her2$days_to_death),
clinic_her2$survival_time <- clinic_her2$days_to_last_followup,
clinic_her2$survival_time <- clinic_her2$days_to_death)
# remove all -Inf in survival time
inf_mask <- ifelse(clinic_her2$survival_time == -Inf, F,T)
clinic_her2 <- clinic_her2[inf_mask,]
# adding death event
clinic_her2$death_event <- ifelse(clinic_her2$vital_status == "Alive",
clinic_her2$death_event <- FALSE,
clinic_her2$death_event <- TRUE)
# Making KM Plot
survival_object <- Surv(time = clinic_her2$survival_time,
event = clinic_her2$death_event)
if (!require(dplyr)){
install.packges("dplyr")
}
library(dplyr)
if (!require(survival)){
install.packges("survival")
}
library(survival)
if (!require(survminer)){
install.packges("survminer")
}
library(survminer)
if (!require(ggplot2)){
install.packges("ggplot2")
}
library(ggplot2)
# Making KM Plot
survival_object <- Surv(time = clinic_her2$survival_time,
event = clinic_her2$death_event)
fit_object <- survfit(survival_object ~ clinic_her2$her2_immunohistochemistry_level_result,
data = clinic_her2)
survplot <- ggsurvplot(fit_object, pval= TRUE, ggtheme =
theme(plot.margin = unit(c(1,1,1,1), "cm")), legend =
"right")
KM_plot <- survplot$plot + theme_bw() + theme(axis.title =
element_text(size=20), axis.text = element_text(size=16),
legend.title = element_text(size=14), legend.text =
element_text(size=12))
KM_plot
plot <- ggplot(clinic_her2, aes(x=her2_immunohistochemistry_level_result, y=sum)
)
+ genom_violin()
+ geom_violin()
plot <- ggplot(clinic_her2, aes(x=her2_immunohistochemistry_level_result, y=sum)) +
geom_violin()
plot
plot <- ggplot(clinic_her2, aes(x=her2_immunohistochemistry_level_result, y=len)) +
geom_violin()
plot
boxplot(clinic$her2_immunohistochemistry_level_result)
ggplot(clinic_her2, aes(x = her2_immunohistochemistry_level_result)) +
geom_bar()
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != ""
& is.na(clinic$her2_immunohistochemistry_level_result) == FALSE )
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != ""
| is.na(clinic$her2_immunohistochemistry_level_result) == FALSE )
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != ""
| is.na(clinic$her2_immunohistochemistry_level_result) == FALSE )
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != "")
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != "")
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != ""
& is.na(clinic$her2_immunohistochemistry_level_result) == FALSE)
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != ""
& is.na(clinic$her2_immunohistochemistry_level_result) == FALSE)
clinic_her2$her2_immunohistochemistry_level_result
### Start of Data Analysis
# The objective of this analysis is to see if there is any mutations associated
# with HER2 Immunohistocehmistry level
# First we want to identify if there is a correlation between HER2 immunohistochemistry
# level and survivability of cancer
# Remove all NA HER2
clinic_her2 <- subset(clinic, clinic$her2_immunohistochemistry_level_result != ""
& is.na(clinic$her2_immunohistochemistry_level_result) == FALSE)
# making a survival time column
clinic_her2$survival_time <- ifelse(is.na(clinic_her2$days_to_death) ,
clinic_her2$survival_time <- clinic_her2$days_to_last_followup,
clinic_her2$survival_time <- clinic_her2$days_to_death)
# remove all -Inf in survival time
inf_mask <- ifelse(clinic_her2$survival_time == -Inf, F,T)
clinic_her2 <- clinic_her2[inf_mask,]
# adding death event
clinic_her2$death_event <- ifelse(clinic_her2$vital_status == "Alive",
clinic_her2$death_event <- FALSE,
clinic_her2$death_event <- TRUE)
ggplot(clinic_her2, aes(x = her2_immunohistochemistry_level_result)) +
geom_bar()
ggplot(clinic_her2, aes(x = her2_immunohistochemistry_level_result)) +
geom_bar() + ggtitle("Number of patients by HER2 Immunhistochemistry Level")
ggplot(clinic_her2, aes(x = her2_immunohistochemistry_level_result)) +
geom_bar() + ggtitle("Number of patients by HER2 Immunhistochemistry Level") +
xlab("Semi-Quantitative Immunohistochemistry Level") + ylab("Number of Patients")
# Making KM Plot
survival_object <- Surv(time = clinic_her2$survival_time,
event = clinic_her2$death_event)
fit_object <- survfit(survival_object ~ clinic_her2$her2_immunohistochemistry_level_result,
data = clinic_her2)
survplot <- ggsurvplot(fit_object, pval= TRUE, ggtheme =
theme(plot.margin = unit(c(1,1,1,1), "cm")), legend =
"right")
KM_plot <- survplot$plot + theme_bw() + theme(axis.title =
element_text(size=20), axis.text = element_text(size=16),
legend.title = element_text(size=14), legend.text =
element_text(size=12))
KM_plot
# Extract the MAFs that contain HER2 Information
has_her2_mask <- ifelse(maf_object@clinical.data$her2_immunohistochemistry_level_result != "",
TRUE,
FALSE)
has_her2_barcode <- maf_object@clinical.data[has_her2_mask,Tumor_Sample_Barcode]
# Extract the MAFs that contain HER2 Information
has_her2_mask <- ifelse(maf_object@clinical.data$her2_immunohistochemistry_level_result != ""
& is.na(maf_object@clinical.data$her2_immunohistochemistry_level_result) == FALSE,
TRUE,
FALSE)
has_her2_barcode <- maf_object@clinical.data[has_her2_mask,Tumor_Sample_Barcode]
maf_her2 <- subsetMaf(maf = maf_object, tsb = has_her2_barcode)
# Split the MAFs that have HER2 Information Into the Low and High HER2 Group
Her2_low_mask <- ifelse(maf_her2@clinical.data$her2_immunohistochemistry_level_result == "0"
| maf_her2@clinical.data$her2_immunohistochemistry_level_result == "1+",
TRUE,
FALSE)
# Split the MAFs that have HER2 Information Into the Low and High HER2 Group
her2_low_mask <- ifelse(maf_her2@clinical.data$her2_immunohistochemistry_level_result == "0"
| maf_her2@clinical.data$her2_immunohistochemistry_level_result == "1+",
TRUE,
FALSE)
her2_low_barcode <- maf_her2@clinical.data[her2_low_mask, Tumor_Sample_Barcode]
maf_low_her2 <- subsetMaf(maf = maf_her2, tsb = her2_low_barcode)
# High HER2 Group
her2_high_mask <- ifelse(maf_her2@clinical.data$her2_immunohistochemistry_level_result == "2+"
| maf_her2@clinical.data$her2_immunohistochemistry_level_result == "3+",
TRUE,
FALSE)
her2_high_barcode <- maf_her2@clinical.data[her2_high_mask, Tumor_Sample_Barcode]
maf_high_her2 <- subsetMaf(maf = maf_her2, tsb = her2_high_barcode)
coOncoplot(m1 = maf_low_her2,
m2 = maf_high_her2,
m1Name = "Patients that express low level HER2 (0,1+)",
m2Name = "Patients that express high level HER2 (2+,3+)",
borderCol = NA)
# Data Processing
rna_clinical <- as.data.frame(rna_se@colData)
View(rna_clinical)
rna_genes <- as.data.frame(rna_se@rowRanges@elementMetadata)
rna_counts <- rna_se@assays@data$unstranded
View(rna_counts)
# Getting only the data from cancerous tissues
cancer_mask <- ifelse(rna_clinical$definition == "Solid Tissue Normal", FALSE, TRUE)
rna_clinical <- rna_clinical[cancer_mask,]
rna_counts <- rna_counts[, cancer_mask]
colnames(rna_clinical)
rna_clinical$age_category <- ifelse(rna_clinical$age_at_index > 58, "Old", "Young")
rna_clinical$age_category <- factor(rna_clinical$age_category)
rna_clinical$ajcc_pathologic_stage <- as.factor(rna_clinical$ajcc_pathologic_stage)
rna_clinical$gender <- as.factor(rna_clinical$gender)
sum(is.na(rna_clinical$age_category))
sum(is.na(rna_clinical$ajcc_pathologic_stage))
sum(is.na(rna_clinical$tissue_or_organ_of_origin))
rna_clinical$age_category <- ifelse(rna_clinical$age_at_index > 58, "Old", "Young")
rna_clinical$age_category <- factor(rna_clinical$age_category)
rna_clinical$ajcc_pathologic_stage <- as.factor(rna_clinical$ajcc_pathologic_stage)
rna_clinical$tissue_or_organ_of_origin <- as.factor(rna_clinical$tissue_or_organ_of_origin)
sum(is.na(rna_clinical$age_category))
sum(is.na(rna_clinical$ajcc_pathologic_stage))
sum(is.na(rna_clinical$tissue_or_organ_of_origin))
na_mask <-  ifelse(is.na(rna_clinical$age_category), FALSE, ifelse(is.na(rna_clinical$ajcc_pathologic_stage), FALSE, ifelse(is.na(rna_clinical$tissue_or_organ_of_origin), FALSE, TRUE)))
rna_clinical <-  rna_clinical[na_mask,]
rna_counts <- rna_counts[,na_mask]
# We will also filter genes that have < 10 counts
row_sums <- rowSums(rna_counts)
low_counts_mask <- ifelse(row_sums < 10, FALSE, TRUE)
rna_counts <- rna_counts[low_counts_mask,]
rna_genes <- rna_genes[low_counts_mask,]
colnames(rna_counts) <- rna_clinical$barcode
rownames(rna_counts) <- rna_genes$gene_id
rna_counts
head(rna_counts)
View(rna_counts)
dds <- DESeqDataSetFromMatrix(countData = rna_counts,
colData = rna_clinical,
design = ~tissue_or_organ_of_origin + ajcc_pathologic_stage + age_category)
dds_obj <- DESeq(dds)
results <- results(dds_obj, format = "DataFrame", contrast = c("age_category", "Young", "Old"))
View(results)
head(results)
# Adding a gene name column
results$gene_name <- rna_genes[match(colnames(results), rna_genes$gene_id), "gene_name"]
match(colnames(results), rna_genes$gene_id)
rna_genes$gene_id
# Adding a gene name column
results$gene_name <- rna_genes[match(colnames(results), rna_genes$gene_id), "gene_name"]
View(results)
head(results)
# Adding a gene name column
results$gene_name <- rna_genes$gene_name
tail(results)
tail(rna_genes)
BiocManager::install('EnhancedVolcano')
BiocManager::install('EnhancedVolcano', force = TRUE)
library(EnhancedVolcano)
EnhancedVolcano(results, x = 'log2FoldChange',
y = 'pvalue',
lab = results$gene_name,
selectLab = c('PIK3CA','TP53'))
EnhancedVolcano(results, x = 'log2FoldChange',
y = 'pvalue',
lab = results$gene_name,
selectLab = c('PIK3CA','TP53'))
which(rna_genes$gene_name == "TP53")
rna_genes[8099.gene_id]
rna_genes[8099, "gene_id"]
which(colnames(results) == "ENSG00000141510.18")
EnhancedVolcano(results, x = 'log2FoldChange',
y = 'padj',
pCutoff = 0.05,
lab = results$gene_name,
selectLab = c('PIK3CA','TP53'))
# Adjusted p value cut-off at 0.05
EnhancedVolcano(results, x = 'log2FoldChange',
y = 'padj',
pCutoff = 0.05,
lab = results$gene_name)
test <- matrix(nrow = 10, ncol = 2, c(1,2,3,4,5,6,7,8,9,10), c(10,9,8,7,6,5,4,3,2,1))
View(test)
test_mask <- ifelse(test[1,] == 9, FALSE, TRUE)
test <- test[test_mask,]
test <- matrix(nrow = 10, ncol = 2, c(1,2,3,4,5,6,7,8,9,10), c(10,9,8,7,6,5,4,3,2,1))
test_mask <- ifelse(test[1,] == 9, FALSE, TRUE)
test <- data.frame(nrow = 10, ncol = 2, c(1,2,3,4,5,6,7,8,9,10), c(10,9,8,7,6,5,4,3,2,1))
test <- data.frame(c(1,2,3,4,5,6,7,8,9,10), c(10,9,8,7,6,5,4,3,2,1))
View(test)
colnames(test) <- c(1,2)
View(test)
test_mask <- ifelse(test$1 == 9, FALSE, TRUE)
test <- test[test_mask,]
View(test)
test_mask <- ifelse(test$1 == 9, TRUE, FALSE)
test <- data.frame(c(1,2,3,4,5,6,7,8,9,10), c(10,9,8,7,6,5,4,3,2,1))
colnames(test) <- c(1,2)
test_mask <- ifelse(test$1 == 9, TRUE, FALSE)
test <- test[test_mask,]
View(test)
test <- data.frame(c(1,2,3,4,5,6), c(2,4,6,8,10))
test <- data.frame(c(1,2,3,4,5,6), c(2,4,6,8,10,12))
View(test)
colnames(test) <- c("one", "two")
View(test)
test_mask <- ifelse(test$one == 1, TRUE, FALSE)
test <- test[test_mask,]
